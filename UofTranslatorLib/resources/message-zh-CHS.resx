<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeTranslator classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeTranslator architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeTranslator
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Border_Style_in_Paragarph" xml:space="preserve">
    <value>段落中的边框线式样</value>
  </data>
  <data name="Capital_Letter_Style_in_Paragraph" xml:space="preserve">
    <value>首字母大写式样</value>
  </data>
  <data name="day_month_year_information_in_Paragraph" xml:space="preserve">
    <value>日期信息</value>
  </data>
  <data name="Dropcap_Style_in_Paragraph" xml:space="preserve">
    <value>段落中的首字下沉式样</value>
  </data>
  <data name="Enclose_Characters_in_Paragraph" xml:space="preserve">
    <value>段落中的带圈字符式样</value>
  </data>
  <data name="endnotePr_and_numRestart_in_Section" xml:space="preserve">
    <value>尾注的重新开始编号式样</value>
  </data>
  <data name="endnotePr_and_pos_in_Section" xml:space="preserve">
    <value>尾注位置信息</value>
  </data>
  <data name="floating_table_relative_horizontal_position_in_Table" xml:space="preserve">
    <value>绕排表格的相对水平位置</value>
  </data>
  <data name="floating_table_relative_vertical_position_in_Table" xml:space="preserve">
    <value>绕排表格的相对水平位置</value>
  </data>
  <data name="Font_Style" xml:space="preserve">
    <value>字体类型</value>
  </data>
  <data name="footnotePr_and_numRestart_in_Section" xml:space="preserve">
    <value>脚注的重新开始编号试样</value>
  </data>
  <data name="footnotePr_and_pos_in_Section" xml:space="preserve">
    <value>脚注位置</value>
  </data>
  <data name="Highlight_Style_in_Paragraph" xml:space="preserve">
    <value>高亮显示式样</value>
  </data>
  <data name="Justification_Style_in_Paragraph" xml:space="preserve">
    <value>段落中的对齐方式式样</value>
  </data>
  <data name="lnNumType_and_lineType_in_Section_Properties" xml:space="preserve">
    <value>节属性中的行号类型</value>
  </data>
  <data name="lnNumType_and_lnNumTypeRestart_in_Section_Properties" xml:space="preserve">
    <value>行号类型和行号重新开始式样</value>
  </data>
  <data name="lvl_and_numFmt_in_Numbering" xml:space="preserve">
    <value>编号格式</value>
  </data>
  <data name="lvl_and_suff_in_Numbering" xml:space="preserve">
    <value>编号与文字间的填充字符</value>
  </data>
  <data name="numFmt_and_val_in_Section_Properties" xml:space="preserve">
    <value>节属性的编号格式</value>
  </data>
  <data name="pgNumType_and_chapStyle_in_Section" xml:space="preserve">
    <value>页码格式和章节式样</value>
  </data>
  <data name="Phonetic_Guide_Style_Paragraph" xml:space="preserve">
    <value>拼音</value>
  </data>
  <data name="shading_for_paragraphs_or_tables_or_phrases" xml:space="preserve">
    <value>段落,表格或文字的填充式样</value>
  </data>
  <data name="Symbol_Characters_Paragraph" xml:space="preserve">
    <value>某些复杂符号字符</value>
  </data>
  <data name="table_border_style_in_Table" xml:space="preserve">
    <value>表格边框式样</value>
  </data>
  <data name="Table_Style" xml:space="preserve">
    <value>某些表格式样</value>
  </data>
  <data name="Text_Effect_or_Math_Formula_in_Paragraph" xml:space="preserve">
    <value>某些文字效果和数学公式</value>
  </data>
  <data name="textDirection_in_Section" xml:space="preserve">
    <value>节属性的文字方向</value>
  </data>
  <data name="Theme_Font_Style" xml:space="preserve">
    <value>主题字体诗样</value>
  </data>
  <data name="vertically_merged_cell_in_Table" xml:space="preserve">
    <value>垂直合并单元格式样</value>
  </data>
</root>