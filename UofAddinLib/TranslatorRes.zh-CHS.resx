<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ByteDesc" xml:space="preserve">
    <value>字节</value>
  </data>
  <data name="CloseButtonTitle" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="ConfigLoadError" xml:space="preserve">
    <value>加载配置时发生错误</value>
  </data>
  <data name="ConfigOneNotFound" xml:space="preserve">
    <value>oox2uof_package 配置项没有找到</value>
  </data>
  <data name="ConfigSaveError" xml:space="preserve">
    <value>保存配置时发生错误</value>
  </data>
  <data name="ConfigThreeNotFound" xml:space="preserve">
    <value>ooxml_version 配置项没有找到</value>
  </data>
  <data name="ConfigTwoNotFound" xml:space="preserve">
    <value>ignore_error 配置项没有找到</value>
  </data>
  <data name="EndPrompt" xml:space="preserve">
    <value>转换已结束.点击对话框右上角"关闭"按钮可回到Word.</value>
  </data>
  <data name="FolderSelectDialogTitle" xml:space="preserve">
    <value>请选择目标目录</value>
  </data>
  <data name="ForDetailPrompt" xml:space="preserve">
    <value>转换过程中可能有内容或样式丢失。请点击"查看细节"按钮查看详情。</value>
  </data>
  <data name="OoxFileTypeDesc" xml:space="preserve">
    <value>docx格式文件</value>
  </data>
  <data name="OpenFileWarning" xml:space="preserve">
    <value>在转换过程中发生了错误.
{1:D}个文件中的{0:D}个已成功转换.
点击"日志"按钮可以查看转换日志.</value>
  </data>
  <data name="OpenFileWarningTitle" xml:space="preserve">
    <value>转换结果</value>
  </data>
  <data name="OpenPartlyPrompt" xml:space="preserve">
    <value>有部分文件已成功转换.
要打开这些文件么?</value>
  </data>
  <data name="OpenPartlyPromptTitle" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="PptxFileTypeDesc" xml:space="preserve">
    <value>pptx格式文件</value>
  </data>
  <data name="SaveAsOoxDialogTitle" xml:space="preserve">
    <value>保存为docx格式文件</value>
  </data>
  <data name="SaveAsPptxDialogTitle" xml:space="preserve">
    <value>保存为pptx格式文件</value>
  </data>
  <data name="SaveAsUofDialogTitle" xml:space="preserve">
    <value>保存为UOF格式文件</value>
  </data>
  <data name="SaveAsXlsxDialogTitle" xml:space="preserve">
    <value>保存为xlsx格式文件</value>
  </data>
  <data name="SaveFileError" xml:space="preserve">
    <value>文件保存过程中发生了错误.
点击"日志"按钮可以查看转换日志.</value>
  </data>
  <data name="SaveFileErrorTitle" xml:space="preserve">
    <value>保存为UOF格式文件失败</value>
  </data>
  <data name="UOFFileTypeDesc" xml:space="preserve">
    <value>UOF格式文件</value>
  </data>
  <data name="XlsxFileTypeDesc" xml:space="preserve">
    <value>xlsx格式文件</value>
  </data>
</root>